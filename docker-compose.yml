services:
  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/database/.env
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_started
      elasticsearch:
        condition: service_started

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-default_user}       # Use variable or fallback to default
      POSTGRES_PASSWORD: ${DB_PASSWORD:-default_pw}
      POSTGRES_DB: ${DB_NAME:-default_db}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      # Substitute the values dynamically from environment
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-default_user} -d ${DB_NAME:-default_db}"]
      interval: 5s
      timeout: 3s
      retries: 5

  mongo:
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-default_mongo_user}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-default_mongo_pw}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data

volumes:
  db_data:
  mongo_data:
  es_data:
